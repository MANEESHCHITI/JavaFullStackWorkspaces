package com.SpringMvc.spbmvc001.controller;

import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.SpringMvc.spbmvc001.dao.EmployeeRepository;
import com.SpringMvc.spbmvc001.dto.Employee;

@RestController
@RequestMapping("/api/v1")

public class EmployeeController {

	@Autowired
	EmployeeRepository employeeRepository;

	@PostMapping("/createEmp")
	public Employee createEmployee(@RequestBody Employee employee) {
		return employeeRepository.save(employee);

	}

	@GetMapping("/getAllEmp")
	public List<Employee> getAllEmployees() {
		return employeeRepository.findAll();

	}

//	@GetMapping("/employees/{id}")
//	public ResponseEntity<Employee> getEmployeeById(@PathVariable(value = "id") Long
//	employeeId)
//	throws ResourceNotFoundException {
//	Employee employee = employeeRepository.findById(employeeId)
//	.orElseThrow(() -> new ResourceNotFoundException("Employee Not Found for this id :" + employeeId));
////	return ResponseEntity.ok().body(employee);
//	return ResponseEntity.ok(employee);
//	
//	}

	
	 @GetMapping("/employees/{id}") public ResponseEntity<Optional<Employee>>
	 getEmployeeById(@PathVariable(value = "id") Long employeeId) throws
	 ResourceNotFoundException {
	 
	  Optional<Employee> employee =employeeRepository.findById(employeeId);
	  
	  return ResponseEntity.ok().body(employee); }
	 

	@PutMapping("/employees/{id}") // instead we can take get in postman
	public ResponseEntity<Employee> updateEmployee(@PathVariable(value = "id") Long employeeId,
			@RequestBody Employee employeeDetails) throws ResourceNotFoundException {

		Employee employee = employeeRepository.findById(employeeId)
				.orElseThrow(() -> new ResourceNotFoundException("Employee Not found for this id : " + employeeId));

		employee.setFirst_name(employeeDetails.getFirst_name());
		employee.setLast_name(employeeDetails.getLast_name());
		employee.setGmail(employeeDetails.getGmail());

		final Employee updatedEmployee = employeeRepository.save(employee);
		return ResponseEntity.ok(updatedEmployee);

	}

	@DeleteMapping("/delete/{id}")
	String deleteEmpById(@PathVariable(value = "id") Long employeeId) {

		employeeRepository.deleteById(employeeId);

		return "Successfully deleted";
	}

}
